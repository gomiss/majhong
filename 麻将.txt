换几张牌能胡

每种颜色分开处理，先不考虑将牌

f[i][j][k] 代表处理完前i-1个字符状态j下，增加的牌比扔掉的牌多k（可能为负数）的最少增加牌

状态不包括当前字符的处理，状态包括了i-1和i-2需要接上的张数,这两个数大于2都是冗余的情况，i-2的张数已经包括了i-1，所以i-1的实际张数是两者之和,

最后三种颜色合起来（川麻其实是两种颜色），其实是找三个值加起来为0，然后对应的代价之和最小，显然是一个简单的dp。

然后考虑将牌，如果直接枚举将牌，那么每次枚举因为修改了牌的状态都需要重新dp（还要另外考虑将牌是怎么来的，如果是借来的，之前那个结果就变成找三个值加起来为-1或-2）

一个明显的优化是，枚举将牌只用重新dp当前颜色，其它颜色的dp结果是可以不变的。

更进一步的优化，将牌把结果分成了前后两块，假如我们有了正向和反向的DP结果，是不是可以枚举将牌前后的情况……

太麻烦了……
好像4^9次方才26万，差值最多14，不如缓存所有的第一次DP的结果……
就这样吧，算是解决了这个问题
so sad so ugly

然而似乎是5^9次方……强行加个优化吧,🈯️🈯️去掉小字的连续0和大字的连续0